{"code":"import { useContext, useEffect } from \"react\";\r\nimport { context } from \"./scene\";\r\nimport useAttributes from \"./useAttributes\";\r\nfunction Text(props) {\r\n    const defaultAttributes = {\r\n        textAlign: \"left\",\r\n        textBaseline: \"top\",\r\n    };\r\n    const { state } = useContext(context);\r\n    const attributes = useAttributes(props, defaultAttributes);\r\n    const text = props.content;\r\n    useEffect(() => {\r\n        // state.context.font = attributes.font;\r\n        // state.context.fillStyle = attributes.fillStyle;\r\n        // state.context.textBaseline = attributes.textBaseline;\r\n        // state.context.fillText(attributes.Text, attributes.left, attributes.top);\r\n        renderText(state.context, attributes, text);\r\n    }, [props.content]);\r\n    return null;\r\n}\r\n/**\r\n *\r\n * @param {object} context\r\n * @param {object} attributes top left width height x y font fontSize fillStyle\r\n */\r\nfunction renderText(ctx, attributes, content) {\r\n    ctx.font = attributes.font;\r\n    ctx.fillStyle = attributes.fillStyle;\r\n    ctx.textBaseline = attributes.textBaseline;\r\n    ctx.textAlign = attributes.textAlign;\r\n    //let distText = attributes.filterText(ctx, attributes.text);\r\n    attributes.width = attributes.width || ctx.measureText(Text).width;\r\n    if (attributes.textAlign === \"right\") {\r\n        attributes.left += attributes.width;\r\n    }\r\n    if (attributes.textAlign === \"center\") {\r\n        attributes.left += attributes.width / 2;\r\n    }\r\n    ctx.fillText(content, attributes.left, attributes.top);\r\n    if (!!attributes.border) {\r\n        ctx.rect(attributes.left, attributes.top, attributes.width, attributes.height);\r\n        ctx.stroke();\r\n    }\r\n}\r\nexport { Text, renderText };\r\n//# sourceMappingURL=text.js.map","references":["/Users/hhh/coding/react-canvas/node_modules/@types/react/index.d.ts","/Users/hhh/coding/react-canvas/src/adapter/scene.tsx","/Users/hhh/coding/react-canvas/src/adapter/types.ts","/Users/hhh/coding/react-canvas/src/adapter/useAttributes.tsx"],"map":"{\"version\":3,\"file\":\"text.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/adapter/text.tsx\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,UAAU,EAAE,SAAS,EAAE,MAAM,OAAO,CAAC;AAC9C,OAAO,EAAE,OAAO,EAAE,MAAM,SAAS,CAAC;AAElC,OAAO,aAAa,MAAM,iBAAiB,CAAC;AAE5C,SAAS,IAAI,CAAC,KAAU;IACtB,MAAM,iBAAiB,GAAc;QACnC,SAAS,EAAE,MAAM;QACjB,YAAY,EAAE,KAAK;KACpB,CAAC;IAEF,MAAM,EAAE,KAAK,EAAE,GAAG,UAAU,CAAC,OAAO,CAAC,CAAC;IAEtC,MAAM,UAAU,GAAG,aAAa,CAAC,KAAK,EAAE,iBAAiB,CAAC,CAAC;IAC3D,MAAM,IAAI,GAAG,KAAK,CAAC,OAAO,CAAC;IAC3B,SAAS,CAAC,GAAG,EAAE;QACb,wCAAwC;QACxC,kDAAkD;QAClD,wDAAwD;QACxD,4EAA4E;QAE5E,UAAU,CAAC,KAAK,CAAC,OAAO,EAAE,UAAU,EAAE,IAAI,CAAC,CAAC;IAC9C,CAAC,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;IAEpB,OAAO,IAAI,CAAC;AACd,CAAC;AAED;;;;GAIG;AACH,SAAS,UAAU,CAAC,GAAQ,EAAE,UAAe,EAAE,OAAY;IACzD,GAAG,CAAC,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC;IAC3B,GAAG,CAAC,SAAS,GAAG,UAAU,CAAC,SAAS,CAAC;IACrC,GAAG,CAAC,YAAY,GAAG,UAAU,CAAC,YAAY,CAAC;IAC3C,GAAG,CAAC,SAAS,GAAG,UAAU,CAAC,SAAS,CAAC;IACrC,6DAA6D;IAC7D,UAAU,CAAC,KAAK,GAAG,UAAU,CAAC,KAAK,IAAI,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC;IAEnE,IAAI,UAAU,CAAC,SAAS,KAAK,OAAO,EAAE;QACpC,UAAU,CAAC,IAAI,IAAI,UAAU,CAAC,KAAK,CAAC;KACrC;IACD,IAAI,UAAU,CAAC,SAAS,KAAK,QAAQ,EAAE;QACrC,UAAU,CAAC,IAAI,IAAI,UAAU,CAAC,KAAK,GAAG,CAAC,CAAC;KACzC;IACD,GAAG,CAAC,QAAQ,CAAC,OAAO,EAAE,UAAU,CAAC,IAAI,EAAE,UAAU,CAAC,GAAG,CAAC,CAAC;IAEvD,IAAI,CAAC,CAAC,UAAU,CAAC,MAAM,EAAE;QACvB,GAAG,CAAC,IAAI,CACN,UAAU,CAAC,IAAI,EACf,UAAU,CAAC,GAAG,EACd,UAAU,CAAC,KAAK,EAChB,UAAU,CAAC,MAAM,CAClB,CAAC;QACF,GAAG,CAAC,MAAM,EAAE,CAAC;KACd;AACH,CAAC;AAED,OAAO,EAAE,IAAI,EAAE,UAAU,EAAE,CAAC\"}","dts":{"name":"/Users/hhh/coding/react-canvas/adapter/text.d.ts","writeByteOrderMark":false,"text":"declare function Text(props: any): null;\r\n/**\r\n *\r\n * @param {object} context\r\n * @param {object} attributes top left width height x y font fontSize fillStyle\r\n */\r\ndeclare function renderText(ctx: any, attributes: any, content: any): void;\r\nexport { Text, renderText };\r\n"}}
