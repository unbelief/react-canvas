{"code":"import { useContext, useEffect } from \"react\";\r\nimport { context } from \"./scene\";\r\nimport useStyle from \"./useStyle\";\r\nfunction Text(props) {\r\n    const defaultAttribute = {\r\n        textAlign: \"left\",\r\n        textBaseline: \"top\",\r\n    };\r\n    const { state } = useContext(context);\r\n    const style = useStyle(props, defaultAttribute);\r\n    const text = props.content;\r\n    useEffect(() => {\r\n        // state.context.font = style.font;\r\n        // state.context.fillStyle = style.fillStyle;\r\n        // state.context.textBaseline = style.textBaseline;\r\n        // state.context.fillText(style.Text, style.left, style.top);\r\n        renderText(state.context, style, text);\r\n    }, [props.content]);\r\n    return null;\r\n}\r\n/**\r\n *\r\n * @param {object} context\r\n * @param {object} style top left width height x y font fontSize fillStyle\r\n */\r\nfunction renderText(ctx, style, content) {\r\n    ctx.font = style.font;\r\n    ctx.fillStyle = style.fillStyle;\r\n    ctx.textBaseline = style.textBaseline;\r\n    ctx.textAlign = style.textAlign;\r\n    //let distText = style.filterText(ctx, style.text);\r\n    style.width = style.width || ctx.measureText(Text).width;\r\n    if (style.textAlign === \"right\") {\r\n        style.left += style.width;\r\n    }\r\n    if (style.textAlign === \"center\") {\r\n        style.left += style.width / 2;\r\n    }\r\n    ctx.fillText(content, style.left, style.top);\r\n    if (!!style.border) {\r\n        ctx.rect(style.left, style.top, style.width, style.height);\r\n        ctx.stroke();\r\n    }\r\n}\r\nexport { Text, renderText };\r\n//# sourceMappingURL=text.js.map","references":["/Users/hhh/coding/react-canvas/node_modules/@types/react/index.d.ts","/Users/hhh/coding/react-canvas/src/adapter/scene.tsx","/Users/hhh/coding/react-canvas/src/adapter/types.ts","/Users/hhh/coding/react-canvas/src/adapter/useStyle.tsx"],"map":"{\"version\":3,\"file\":\"text.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/adapter/text.tsx\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,UAAU,EAAE,SAAS,EAAE,MAAM,OAAO,CAAC;AAC9C,OAAO,EAAE,OAAO,EAAE,MAAM,SAAS,CAAC;AAElC,OAAO,QAAQ,MAAM,YAAY,CAAC;AAElC,SAAS,IAAI,CAAC,KAAU;IACtB,MAAM,gBAAgB,GAAc;QAClC,SAAS,EAAE,MAAM;QACjB,YAAY,EAAE,KAAK;KACpB,CAAC;IAEF,MAAM,EAAE,KAAK,EAAE,GAAG,UAAU,CAAC,OAAO,CAAC,CAAC;IAEtC,MAAM,KAAK,GAAG,QAAQ,CAAC,KAAK,EAAE,gBAAgB,CAAC,CAAC;IAChD,MAAM,IAAI,GAAG,KAAK,CAAC,OAAO,CAAC;IAC3B,SAAS,CAAC,GAAG,EAAE;QACb,mCAAmC;QACnC,6CAA6C;QAC7C,mDAAmD;QACnD,6DAA6D;QAE7D,UAAU,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;IACzC,CAAC,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;IAEpB,OAAO,IAAI,CAAC;AACd,CAAC;AAED;;;;GAIG;AACH,SAAS,UAAU,CAAC,GAAQ,EAAE,KAAU,EAAE,OAAY;IACpD,GAAG,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;IACtB,GAAG,CAAC,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC;IAChC,GAAG,CAAC,YAAY,GAAG,KAAK,CAAC,YAAY,CAAC;IACtC,GAAG,CAAC,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC;IAChC,mDAAmD;IACnD,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,IAAI,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC;IAEzD,IAAI,KAAK,CAAC,SAAS,KAAK,OAAO,EAAE;QAC/B,KAAK,CAAC,IAAI,IAAI,KAAK,CAAC,KAAK,CAAC;KAC3B;IACD,IAAI,KAAK,CAAC,SAAS,KAAK,QAAQ,EAAE;QAChC,KAAK,CAAC,IAAI,IAAI,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC;KAC/B;IACD,GAAG,CAAC,QAAQ,CAAC,OAAO,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC;IAE7C,IAAI,CAAC,CAAC,KAAK,CAAC,MAAM,EAAE;QAClB,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,GAAG,EAAE,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC;QAC3D,GAAG,CAAC,MAAM,EAAE,CAAC;KACd;AACH,CAAC;AAED,OAAO,EAAE,IAAI,EAAE,UAAU,EAAE,CAAC\"}","dts":{"name":"/Users/hhh/coding/react-canvas/adapter/text.d.ts","writeByteOrderMark":false,"text":"declare function Text(props: any): null;\r\n/**\r\n *\r\n * @param {object} context\r\n * @param {object} style top left width height x y font fontSize fillStyle\r\n */\r\ndeclare function renderText(ctx: any, style: any, content: any): void;\r\nexport { Text, renderText };\r\n"}}
